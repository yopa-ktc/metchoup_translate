{"version":3,"sources":["config.js","Service.js","App.js","reportWebVitals.js","index.js"],"names":["base","module","exports","CONFIGURATION","URL_ADD_SUGGESTION","URL_GET_EXPRESSION","URL_GET_LANGUAGES","URL_UPLOAD","Service","suggestion","son","a","url","suggestionInfo","FormData","append","langue_arrive","expression_arrive","langue_depart","expression_depart","email","axios","post","console","log","get","language","App","props","setTranslation","bind","handleSubmitDoc","handlerChangeFile","handlerChange","handlerSelectSrcLanguage","handlerSelectTrsLanguage","customTheme","customThemeTrs","state","listLanguage","srcLanguage","trsLanguage","audioTrsLanguage","showExpressions","listExpression","listTranslation","textSrc","textTrs","expression_son","confirmationSuggestion","undefined","spinner","this","getAllLanguages","allLanguages","getExpression","reponse","listLanguages","data","forEach","info","Tables_in_martinku_metchoup_translate","expression","value","label","push","setState","event","target","name","type","message","inputField","document","querySelector","className","error","dropdown","dropdownArray","querySelectorAll","classList","add","valueArray","item","textContent","remove","addEventListener","inputValue","toLowerCase","length","j","substring","i","index","evt","expression_audio","isDropdown","contains","isInput","preventDefault","postSuggestion","status","buttonClose","getElementById","setTimeout","click","componentDidMount","file","Date","files","size","play","select","execCommand","style","backgroundColor","theme","colors","primary25","primary","color","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","src","align","width","margin","fontSize","defaultValue","placeholder","options","onChange","autoFocus","onClick","rows","map","readExpression","copyText","height","title","frameborder","allow","allowfullscreen","tabIndex","aria-labelledby","aria-hidden","role","data-dismiss","onSubmit","enctype","required","aria-describedby","accept","for","disabled","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52657243.chunk.js","sourcesContent":["\r\n /* Le lien de production*/ let base = 'https://translate.metchoup.com/api/';\r\n// /* Le lien de test en local*/ let base = 'http://localhost/api/';\r\n\r\nmodule.exports = {\r\n    CONFIGURATION : {\r\n        URL_ADD_SUGGESTION : base + 'suggestion',\r\n        URL_GET_EXPRESSION : base + 'getExpressions',\r\n        URL_GET_LANGUAGES : base + 'allLanguages',\r\n        URL_UPLOAD : base + 'uploadExpressionSon'\r\n    }\r\n}","import axios from 'axios';\r\nimport {CONFIGURATION} from './config';\r\n\r\nexport default class Service {\r\n\r\n    // getToken(){\r\n    //     var userToken;\r\n    //     var user = firebase.auth().currentUser;\r\n    //         if (user){\r\n    //             userToken=user.ya;\r\n    //             axios.defaults.headers.common['Authorization'] = userToken;\r\n    //         }else{\r\n    //         userToken=false;\r\n    //         }\r\n    //     return userToken;\r\n    // }\r\n\r\n    async postSuggestion(suggestion, son){\r\n\r\n        try {\r\n            const url = CONFIGURATION.URL_ADD_SUGGESTION;\r\n            const suggestionInfo = new FormData();\r\n                suggestionInfo.append(\"langue_arrive\",suggestion.langue_arrive);\r\n                suggestionInfo.append(\"expression_arrive\",suggestion.expression_arrive);\r\n                suggestionInfo.append(\"langue_depart\", suggestion.langue_depart);\r\n                suggestionInfo.append(\"expression_depart\", suggestion.expression_depart);\r\n                suggestionInfo.append(\"email\", suggestion.email);\r\n                suggestionInfo.append(\"expression_audio\", son);\r\n\r\n            return await axios.post(url, suggestionInfo);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async getAllLanguages(){\r\n        const url = CONFIGURATION.URL_GET_LANGUAGES;\r\n        // console.log(\"je cherche toutes les langues !\")\r\n        return await axios.get(url);\r\n        // console.log(all)\r\n\r\n    }\r\n\r\n    async getExpression(language){\r\n        const url = CONFIGURATION.URL_GET_EXPRESSION+'/'+language;\r\n        return await axios.get(url);\r\n    }\r\n\r\n}","// import logo from './logo.svg';\nimport React, { Component } from 'react';\n// import {link} from 'react-router-dom';\nimport Select from 'react-select';\n// import AsyncSelect from 'react-select/async';\nimport './App.css';\nimport Service from  './Service';\n\nexport default class App extends Component{\n\n  constructor(props){\n    super(props);\n    this.setTranslation = this.setTranslation.bind(this);\n    this.handleSubmitDoc = this.handleSubmitDoc.bind(this);\n    this.handlerChangeFile = this.handlerChangeFile.bind(this);\n    this.handlerChange = this.handlerChange.bind(this);\n    this.handlerSelectSrcLanguage = this.handlerSelectSrcLanguage.bind(this);\n    this.handlerSelectTrsLanguage = this.handlerSelectTrsLanguage.bind(this);\n    this.customTheme = this.customTheme.bind(this);\n    this.customThemeTrs = this.customThemeTrs.bind(this);\n\n    this.state = {\n      listLanguage : [],\n      srcLanguage : \"english\",\n      trsLanguage : \"\",\n      audioTrsLanguage : \"\",\n      showExpressions : false,\n      listExpression : [],\n      listTranslation : [],\n      textSrc: \"\",\n      textTrs: \"\",\n\n      suggestion : {\n        langue_arrive : \"\",\n        expression_arrive : \"\",\n        langue_depart : \"\",\n        expression_depart : \"\",\n        expression_son : \"\",\n        email : \"\"\n      },\n\n      confirmationSuggestion : undefined,\n      spinner : \"visually-hidden\"\n    };\n\n    this.Service = new Service();\n  }\n\n  async componentDidMount(){\n\n    //Get all the languages\n    const allLanguages = await this.Service.getAllLanguages();\n        // console.log(allLanguages)\n    const reponse = await this.Service.getExpression(this.state.srcLanguage);\n\n    let suggestion =  {\n      langue_arrive : \"\",\n      expression_arrive : \"\",\n      langue_depart : \"\",\n      expression_depart : \"\",\n      expression_son : \"\",\n      email : \"\"\n    };\n    \n    var listLanguages = [];\n\n    allLanguages.data.forEach((info) => {\n      if(info.Tables_in_martinku_metchoup_translate !== 'suggestions' ){\n        var expression = {\n          value: info.Tables_in_martinku_metchoup_translate,\n          label: info.Tables_in_martinku_metchoup_translate\n        };\n        listLanguages.push(expression);\n      }\n    })\n\n    // allLanguages.data.forEach((info) => {\n    //   if(info.Tables_in_metchoup !== 'suggestions' ){\n    //     var expression = {\n    //       value: info.Tables_in_metchoup,\n    //       label: info.Tables_in_metchoup\n    //     };\n    //     listLanguages.push(expression);\n    //   }\n    // })\n\n    this.setState((state)=>({suggestion: suggestion, listExpression: reponse.data, listLanguage: listLanguages, confirmationSuggestion : undefined}));\n  }\n\n\n  async handlerChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    if(target.type === 'textarea'){\n      this.setState((state)=>({textSrc: value}));\n    }else{\n      let suggestion = this.state.suggestion;\n      suggestion[name] = value;\n      this.setState({suggestion: suggestion});\n    }\n  }\n\n  handlerSelectTrsLanguage(name){\n    this.setState((state)=>({trsLanguage: name.value, message: undefined, showExpressions: true, textTrs: \"\"}));\n  }\n\n  async handlerSelectSrcLanguage(language){\n      this.setState((state)=>({srcLanguage: language.value, textSrc: \"\"}));\n      const reponse = await this.Service.getExpression(language.value);\n      this.setState((state)=>({listExpression: reponse.data}));\n  }\n\n  async setTranslation(){\n    const inputField = document.querySelector('.chosen-value');\n    if(this.state.trsLanguage === \"\"){\n      this.setState((state)=>({message: <h6 className=\"message\">Choose a language for translation</h6>, showExpressions: false, error: \"error\"}));\n    }else if(this.state.srcLanguage === this.state.trsLanguage){\n      this.setState((state)=>({message: <h6 className=\"message\">The source language must be different for the translation language</h6>, showExpressions: false, error: \"error\"}));\n    }else{\n       \n      //Fonction qui active le dictionnaire de la langue de traduction\n      const reponse = await this.Service.getExpression(this.state.trsLanguage);\n      this.setState((state)=>({listTranslation: reponse.data}))\n\n      // console.log(this.state.listTranslation)\n\n      this.setState((state)=>({message: undefined, showExpressions: true, error: \"\"}));\n\n      const dropdown = document.querySelector('.value-list');\n      const dropdownArray = [...document.querySelectorAll('li')];\n      dropdown.classList.add('open');\n      // inputField.focus(); // Demo purposes only\n      let valueArray = [];\n      dropdownArray.forEach(item => {\n        valueArray.push(item.textContent);\n      });\n\n      const closeDropdown = () => {\n        dropdown.classList.remove('open');\n      }\n  \n      inputField.addEventListener('input', () => {\n        dropdown.classList.add('open');\n        let inputValue = inputField.value.toLowerCase();\n        let valueSubstring;\n        if (inputValue.length > 0) {\n          for (let j = 0; j < valueArray.length; j++) {\n            if (!(inputValue.substring(0, inputValue.length) === valueArray[j].substring(0, inputValue.length).toLowerCase())) {\n              dropdownArray[j].classList.add('closed');\n            } else {\n              dropdownArray[j].classList.remove('closed');\n            }\n          }\n        } else {\n          for (let i = 0; i < dropdownArray.length; i++) {\n            dropdownArray[i].classList.remove('closed');\n          }\n        }\n      });\n  \n      dropdownArray.forEach((item, index) => {\n        item.addEventListener('click', (evt) => {\n          this.setState((state)=>({textSrc: item.textContent, textTrs: this.state.listTranslation[index-3].expression, audioTrsLanguage: this.state.listTranslation[index-3].expression_audio}));\n            dropdownArray.forEach(dropdown => {\n              dropdown.classList.add('closed');\n            });\n        });   \n      })\n\n      // for(let i = 0; this.state.listExpression   ){\n      // }\n  \n      // inputField.addEventListener('focus', () => {\n      //   inputField.placeholder = 'Write your text';\n      //   dropdown.classList.add('open');\n      //   dropdownArray.forEach(dropdown => {\n      //     dropdown.classList.remove('closed');\n      //   });\n      // });\n      // inputField.addEventListener('blur', () => {\n      //   inputField.placeholder = 'Write your text here...';\n      //   dropdown.classList.remove('open');\n      // });\n  \n      document.addEventListener('click', (evt) => {\n        const isDropdown = dropdown.contains(evt.target);\n        const isInput = inputField.contains(evt.target);\n        if (!isDropdown && !isInput) {\n          dropdown.classList.remove('open');\n        }\n      });\n    }\n  }\n\n  async handleSubmitDoc(event){\n    event.preventDefault();\n    this.setState((state)=>({spinner: \"\"}))\n    const reponse = await this.Service.postSuggestion(this.state.suggestion, this.state.son)\n    if(reponse.status === 200){\n      var buttonClose = document.getElementById('closeModal');\n      this.setState((state)=>({confirmationSuggestion: <p className=\"alert alert-success\"><b>Me lapt'euh</b> (thank you !) \n          <br/>Your transaction will be studied</p>, spinner : \"visually-hidden\"})\n      ); \n      setTimeout(()=> {\n        buttonClose.click();\n        this.componentDidMount();\n      }, 3000)\n    }\n  }\n\n\n  handlerChangeFile(event){\n    try {\n      event.preventDefault();\n      const target = event.target;\n      var dateMail = new Date();\n      const file = target.files[0];\n      if(file.type === \"audio/x-m4a\" || file.type === \"audio/wav\" || file.type === \"audio/mpeg\" || file.type === \"audio/ogg\"){\n        if(file.size/(1024) <= 3000){\n          this.state.son = file;\n          this.setState((state)=>({confirmationSuggestion: <p className=\"alert alert-success\">Fichier bien enregistré !</p>})); \n          setTimeout(()=> {\n            this.setState((state)=>({confirmationSuggestion: undefined})); \n          }, 1500)\n        }else{\n          this.setState((state)=>({confirmationSuggestion: <p className=\"error\">Audio trop lourd ! ( moins de 3MB )</p>})); \n        }\n      }else{\n        this.setState((state)=>({confirmationSuggestion: <p className=\"error\">Votre fichier n'est pas audio !</p>})); \n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  readExpression(){\n    const expression_son = document.getElementById('expression_son');\n    expression_son.play();\n  }\n\n  copyText(){\n    var toCopy = document.getElementById('translationText');\n        toCopy.select();\n        document.execCommand('copy');\n        this.setState((state)=>({message: <h6 style={{backgroundColor: \"rgb(88, 255, 199)\"}}>Text copied !</h6>}));\n        setTimeout(()=> {\n          this.setState((state)=>({message: undefined}));\n        }, 3000)\n    return false;\n  }\n\n  customTheme(theme){\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary25: 'rgb(88, 255, 199)',\n        primary: 'rgb(88, 255, 199)',\n      },\n    };\n  }\n\n  customThemeTrs(theme){\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary25: '#b245bc',\n        primary: '#b245bc',\n      },\n    };\n  }\n\n  render(){\n    return(\n      <>\n      <header>\n          <nav className=\"navbar navbar-expand-lg navbar-light\" style={{backgroundColor: \"#b245bc\"}}>\n            <a style={{color: \"rgb(88, 255, 199)\"}} className=\"nav-link\" target=\"_blanck\" href=\"https://metchoup.com\"><i className=\"bi bi-arrow-left-square\"></i> Back to the site <span className=\"sr-only\">(current)</span></a>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#suggestionForm\" className=\"nav-link btn btn-dark btn-sm\">Contribute</button>\n            {/* <a style={{color: \"white\"}} className=\"navbar-brand\" href=\"https://translate.metchoup.com\">Metchoup translate</a> */}\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active ml-3\">\n                  <a style={{color: \"white\"}} className=\"navbar-brand\" href=\"https://translate.metchoup.com\">Metchoup-translate</a>\n                </li>\n\n                <li className=\"nav-item\">\n                  <a style={{color: \"white\"}} className=\"nav-link\"><img src='united-states.png'/> Page in english</a>   \n                </li>\n                \n                <li className=\"nav-item\">\n                  <a style={{color: \"white\"}} className=\"nav-link\"><img src='france.png'/> Page in french</a>\n                </li>\n                {/* <li className=\"nav-item active\">\n                  <a style={{color: \"rgb(88, 255, 199)\"}} className=\"nav-link\" target=\"_blanck\" href=\"https://metchoup.com\">Back to the site <span className=\"sr-only\">(current)</span><i class=\"bi bi-arrow-right-square-fill\"></i></a>\n                </li> */}\n              </ul>\n              {/* <form className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n              </form> */}\n            </div>\n          </nav>\n      </header>\n     \n    <div align=\"center\" className=\"mt-2\" style={{width: \"80%\", margin: \"auto\"}}>\n      <strong><h1 style={{fontSize: \"1.25rem\"}}><span style={{color: \"#b245bc\"}}>Translate yours words</span> between <span style={{color: \"rgb(0, 209, 139)\"}}>africans languages</span></h1></strong>\n      <hr/>\n      \n      {/* -------------------------------- */}\n      <div className=\"row container\">\n          <div className=\"col\">\n              <Select \n                theme={this.customTheme}\n                defaultValue={this.state.listLanguage[3]}\n                placeholder=\"Source language\"\n                options={this.state.listLanguage}\n                onChange={this.handlerSelectSrcLanguage}\n              />\n          </div>\n          <div className=\"col\">\n              <Select \n                theme={this.customThemeTrs}\n                placeholder=\"Translation language\"\n                options={this.state.listLanguage}\n                onChange={this.handlerSelectTrsLanguage}\n              />\n          </div>\n      </div>\n      {this.state.message}\n      <hr/>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <form>\n            <textarea autoFocus value={this.state.textSrc} onChange={this.handlerChange} placeholder=\"Write your text here...\" onClick={this.setTranslation} rows=\"3\" className=\"chosen-value srcArea form-control mt-1\"></textarea>\n            { !this.state.showExpressions ? '' :\n                <ul className=\"value-list\">\n                  {this.state.listExpression.map((item) => (\n                    <li key={item.id}>{item.expression}</li>\n                  ))}\n                </ul>\n            }\n          </form>\n        </div>\n\n        <div className=\"col-sm\">\n            \n          <textarea rows=\"3\" id=\"translationText\" value={this.state.textTrs} className=\"form-control textcss mt-1\"></textarea>\n          <audio id='expression_son' src={'expression_son/'+this.state.trsLanguage+'/'+this.state.audioTrsLanguage}></audio>\n          <h3>\n          <button className=\"btn btn-outline-secondary\"><i onClick={() => this.readExpression()} className=\"bi bi-volume-up-fill\"></i></button> <button className=\"btn btn-outline-secondary\" onClick={() => this.copyText()}><i className=\"bi bi-clipboard\"></i></button></h3> \n        </div>\n      </div>\n      \n    </div>\n\n    <div align=\"center\" id=\"video_tutorial\">\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m_1uVqzg1iw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n    </div>\n\n\n    <div className=\"modal fade\" id=\"suggestionForm\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content modalMetchoup\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Suggest a translation</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <form onSubmit={this.handleSubmitDoc} enctype='multipart/form-data'>\n            <div className=\"modal-body\">\n                <div className=\"input-group input-group-sm mb-3\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">source language</span>\n                  <input required value={this.state.suggestion.langue_depart} type=\"text\" name=\"langue_depart\" className=\"form-control\" onChange={this.handlerChange} aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"/>\n                </div>\n                {/* <input required value={this.state.suggestion.langue_depart} name=\"langue_depart\" className=\"form-control mb-2\" type=\"text\" onChange={this.handlerChange} placeholder=\"langue de départ\"/> */}\n                <div className=\"input-group input-group-sm mb-3\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">original expression</span>\n                  <input required value={this.state.suggestion.expression_depart} name=\"expression_depart\" className=\"form-control\" type=\"text\" onChange={this.handlerChange} aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"/>                 \n                </div>\n                {/* <input required value={this.state.suggestion.expression_depart} name=\"expression_depart\" className=\"form-control mb-2\" type=\"text\" onChange={this.handlerChange} placeholder=\"expression d'origine\"/> */}\n                <div className=\"input-group input-group-sm mb-3\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Translation language</span>\n                  <input required value={this.state.suggestion.langue_arrive} name=\"langue_arrive\" className=\"form-control\" type=\"text\" onChange={this.handlerChange} aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"/>\n                  {/* <input required value={this.state.suggestion.langue_arrive} name=\"langue_arrive\" className=\"form-control mb-2\" type=\"text\" onChange={this.handlerChange} placeholder=\"langue d'arrivée\"/> */}\n                </div>\n\n                <div className=\"input-group input-group-sm mb-3\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">translated expression</span>\n                  <input required value={this.state.suggestion.expression_arrive} name=\"expression_arrive\" className=\"form-control\" type=\"text\" onChange={this.handlerChange} aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"/>\n                  {/* <input required value={this.state.suggestion.expression_arrive} name=\"expression_arrive\" className=\"form-control mb-2\" type=\"text\" onChange={this.handlerChange} placeholder=\"expression traduite\"/> */}\n                </div> \n                  \n                <div className=\"custom-file mb-2\">\n                    <input type=\"file\" accept=\".mp3,.wav,.ogg,.m4a,.mpeg\" name=\"expression_son\" className=\"custom-file-input\" id=\"validatedCustomFile\" aria-describedby=\"customFileValidationFeedback\" onChange={this.handlerChangeFile}/>\n                    <label className=\"custom-file-label\" for=\"validatedCustomFile\">fichier de prononciation<span className=\"sr-only\"> (required)</span>\n                    </label>\n                    <div className=\"invalid-feedback\" id=\"customFileValidationFeedback\">\n                        Example invalid custom file feedback\n                    </div>\n                </div>\n                \n                <div className=\"input-group input-group-sm mb-3\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Your email/name</span>\n                  <input required value={this.state.suggestion.email} name=\"email\" className=\"form-control\" type=\"text\" onChange={this.handlerChange} aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"/>\n                </div>\n\n            </div>\n              \n              {this.state.confirmationSuggestion}\n            <div className=\"modal-footer\">\n              <div className={\"spinner-border text-success \"+ this.state.spinner} role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n              <button type=\"button\" id=\"closeModal\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              <button type=\"submit\" disabled={this.state.confirmationSuggestion !== undefined || this.state.spinner == \"\"} className=\"btn btn-success\">Save</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    </>\n    )\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}